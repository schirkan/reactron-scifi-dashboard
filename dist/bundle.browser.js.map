{"version":3,"file":"bundle.browser.js","sources":["../src/browser/components/DigitalClock/DigitalClock.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/browser/components/InfoItem/InfoItem.tsx","../src/browser/components/WeatherInfo/IWeatherInfoItemProps.tsx","../src/browser/components/WeatherInfo/WeatherInfo.tsx","../src/browser/components/Dashboard/getInfoItemData.ts","../src/browser/components/Dashboard/Dashboard.tsx","../src/browser/components/locationInput.tsx","../src/browser/index.ts"],"sourcesContent":["import moment from 'moment';\r\nimport * as React from 'react';\r\n\r\nexport interface IDigitalClockProps{\r\n  timezone: string;\r\n}\r\n\r\nexport class DigitalClock extends React.Component<IDigitalClockProps> {\r\n  private timer: number;\r\n\r\n  public componentDidMount() {\r\n    this.timer = window.setInterval(() => this.forceUpdate(), 60000);\r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    window.clearInterval(this.timer);\r\n  }\r\n\r\n  public render() {\r\n    const time = moment().tz(this.props.timezone);\r\n    return time.format('LT');\r\n  }\r\n}\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import * as React from 'react';\r\n\r\nimport styles from './InfoItem.scss';\r\n// tslint:disable:no-string-literal\r\n\r\nexport interface IInfoItemProps {\r\n  title: any;\r\n  value: any;\r\n  circleContent: any;\r\n  circleStart: number;\r\n  circlePercent: number;\r\n}\r\n\r\nexport class InfoItem extends React.Component<IInfoItemProps> {\r\n  constructor(props: IInfoItemProps) {\r\n    super(props);\r\n  }\r\n\r\n  private renderCircle() {\r\n    const dark = '#444';\r\n    const light = '#fff';\r\n\r\n    const percent = Math.min(this.props.circlePercent, 100);\r\n    const angle = 360 * (percent / 100);\r\n    let start = Math.min(this.props.circleStart, 360);\r\n    if (angle < 0) {\r\n      start += 180;\r\n    }\r\n\r\n    const circleStyle: React.CSSProperties = {};\r\n    const circleStyleContent: React.CSSProperties = { background: dark };\r\n\r\n    if (percent > 50) {\r\n      circleStyle.backgroundImage = `\r\n        linear-gradient(${start + angle}deg, ${light} 50%, transparent 50%, transparent), \r\n        linear-gradient(${start + 180}deg, ${light} 50%, ${dark} 50%, ${dark})\r\n      `;\r\n    } else {\r\n      circleStyle.backgroundImage = `\r\n        linear-gradient(${start + angle + 180}deg, ${dark} 50%, transparent 50%, transparent), \r\n        linear-gradient(${start + 180}deg, ${light} 50%, ${dark} 50%, ${dark})\r\n      `;\r\n    }\r\n\r\n    return (\r\n      <div className={styles['circle']} style={circleStyle}>\r\n        <div className={styles['circleContent']} style={circleStyleContent}>\r\n          {this.props.circleContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className={styles['InfoItem']}>\r\n        <div className={styles['title']} >{this.props.title}</div>\r\n        <div className={styles['value']} >{this.props.value}</div>\r\n        {this.renderCircle()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nimport styles from './WeatherInfoItem.scss';\r\n// tslint:disable:no-string-literal\r\n\r\nexport interface IWeatherInfoItemProps {\r\n  valueTop?: any;\r\n  valueLeftTop?: any;\r\n  valueLeftBottom?: any;\r\n  valueRight?: any;\r\n  valueBottom?: any;\r\n}\r\n\r\nexport class WeatherInfoItem extends React.Component<IWeatherInfoItemProps> {\r\n  public render() {\r\n    return (<div className={styles['WeatherInfoItem']}>\r\n      <div className={styles['top']} hidden={!this.props.valueTop}>{this.props.valueTop}</div>\r\n      <div className={styles['left-top']}><div>{this.props.valueLeftTop}</div></div>\r\n      <div className={styles['left-bottom']}><div>{this.props.valueLeftBottom}</div></div>\r\n      <div className={styles['right']}>{this.props.valueRight}</div>\r\n      <div className={styles['bottom']}>{this.props.valueBottom}</div>\r\n    </div>);\r\n  }\r\n}\r\n","import { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport numeral from 'numeral';\r\nimport * as React from 'react';\r\nimport { IWeatherCondition, IWeatherForecast } from 'reactron-openweathermap/src/server';\r\nimport { IWeatherInfoItemProps, WeatherInfoItem } from './IWeatherInfoItemProps';\r\n\r\nimport styles from './WeatherInfo.scss';\r\n// tslint:disable:no-string-literal\r\n\r\nexport interface IWeatherInfoProps {\r\n  context: IReactronComponentContext;\r\n  weatherForecast?: IWeatherForecast;\r\n  timezone: string;\r\n}\r\n\r\nexport class WeatherInfo extends React.Component<IWeatherInfoProps> {\r\n\r\n  public componentDidMount() {\r\n    // \r\n  }\r\n\r\n  public componentWillUnmount() {\r\n    // \r\n  }\r\n\r\n  private renderItem(condition: IWeatherCondition, lastItem: IWeatherCondition | undefined) {\r\n    const night = condition && condition.weather_icon.endsWith('n');\r\n\r\n    const weatherIcon = this.props.context.renderComponent({\r\n      moduleName: 'reactron-openweathermap',\r\n      componentName: 'WeatherIcon',\r\n      options: { weatherId: condition.weather_id, night },\r\n      className: styles['weatherIcon']\r\n    });\r\n\r\n    const date = moment(condition.dt * 1000).tz(this.props.timezone);\r\n    let valueTop = date.format('L');\r\n    if (lastItem) {\r\n      const lastDate = moment(lastItem.dt * 1000).tz(this.props.timezone);\r\n      if (date.dayOfYear() === lastDate.dayOfYear()) {\r\n        valueTop = '';\r\n      }\r\n    }\r\n\r\n    const data: IWeatherInfoItemProps = {\r\n      valueBottom: condition.weather_description,\r\n      valueLeftBottom: numeral(condition.temp).format('0.0'),\r\n      valueLeftTop: date.hour(),\r\n      valueRight: weatherIcon,\r\n      valueTop,\r\n    };\r\n\r\n    return (<WeatherInfoItem {...data} key={condition.dt} />);\r\n  }\r\n\r\n  private renderItems() {\r\n    if (!this.props.weatherForecast) {\r\n      return null;\r\n    }\r\n    let lastItem: IWeatherCondition | undefined;\r\n    return this.props.weatherForecast.list.slice(0, 10).map(item => {\r\n      const result = this.renderItem(item, lastItem)\r\n      lastItem = item;\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className={styles['WeatherInfo']}>\r\n        {this.renderItems()}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import numeral from 'numeral';\r\nimport { IWeatherCondition } from 'reactron-openweathermap/src/server/index';\r\nimport { IInfoItemProps } from '../InfoItem/InfoItem';\r\n\r\nexport const getInfoItemData = (info: string, units: string, condition: IWeatherCondition): IInfoItemProps | undefined => {\r\n  switch (info) {\r\n    case 'temp':\r\n      let tempCelsius = 0;\r\n      let tempUnit = '';\r\n      if (units === 'metric') {\r\n        tempUnit = '°C';\r\n        tempCelsius = condition.temp;\r\n      }\r\n      else if (units === 'imperial') {\r\n        tempUnit = '°F';\r\n        tempCelsius = (condition.temp - 32) / 1.8;\r\n      }\r\n      else {\r\n        tempUnit = '°K';\r\n        tempCelsius = condition.temp - 273.15;\r\n      }\r\n      return {\r\n        title: 'Temp',\r\n        value: numeral(condition.temp).format('0.0'),\r\n        circleContent: tempUnit,\r\n        circleStart: 90,\r\n        circlePercent: (100 / 40) * tempCelsius\r\n      };\r\n      \r\n    case 'rain':\r\n      const maxRain = 10;\r\n      const rainPercent = (100 / maxRain) * condition.rain;\r\n      return {\r\n        title: 'rain',\r\n        value: numeral(condition.rain).format('0.0'),\r\n        circleContent: 'mm',\r\n        circleStart: 90,\r\n        circlePercent: rainPercent\r\n      };\r\n\r\n    case 'pressure':\r\n      const minPressure = 900;\r\n      const maxPressure = 1100;\r\n      const pressurePercent = (100 / (maxPressure - minPressure)) * (condition.pressure - minPressure);\r\n      return {\r\n        title: 'Pressure',\r\n        value: numeral(condition.pressure).format('0'),\r\n        circleContent: 'hPa',\r\n        circleStart: 90,\r\n        circlePercent: pressurePercent\r\n      };\r\n\r\n    case 'clouds':\r\n      return {\r\n        title: 'Clouds',\r\n        value: numeral(condition.clouds).format('0'),\r\n        circleContent: '%',\r\n        circleStart: 90,\r\n        circlePercent: condition.clouds\r\n      };\r\n\r\n    case 'humidity':\r\n      return {\r\n        title: 'Humidity',\r\n        value: numeral(condition.humidity).format('0'),\r\n        circleContent: '%',\r\n        circleStart: 90,\r\n        circlePercent: condition.humidity\r\n      };\r\n\r\n    case 'wind':\r\n      return {\r\n        title: 'Wind',\r\n        value: numeral(condition.wind_speed).format('0.0'),\r\n        circleContent: units === 'imperial' ? 'mph' : 'km/h',\r\n        circleStart: 88 + condition.wind_deg,\r\n        circlePercent: 4\r\n      };\r\n  }\r\n  return undefined;\r\n};","import { IReactronComponentContext } from '@schirkan/reactron-interfaces';\r\nimport moment from 'moment';\r\nimport * as React from 'react';\r\nimport { IWeatherForecast, IWeatherService } from 'reactron-openweathermap/src/server';\r\nimport { DigitalClock } from '../DigitalClock/DigitalClock';\r\nimport { InfoItem } from '../InfoItem/InfoItem';\r\nimport { InfoItemType } from '../InfoItem/InfoItemType';\r\nimport { WeatherInfo } from '../WeatherInfo/WeatherInfo';\r\nimport { getInfoItemData } from './getInfoItemData';\r\n\r\nimport styles from './Dashboard.scss';\r\n// tslint:disable:no-string-literal\r\n\r\nexport interface IDashboardProps {\r\n  location: { cityName: string, zip: string }\r\n  infoItems: InfoItemType[];\r\n  contentId: string;\r\n}\r\n\r\ninterface IDashboardState {\r\n  weatherForecast?: IWeatherForecast;\r\n  units?: string;\r\n}\r\n\r\nexport class Dashboard extends React.Component<IDashboardProps, IDashboardState> {\r\n  public context: IReactronComponentContext;\r\n  public static defaultProps: Partial<IDashboardProps> = {\r\n    location: { cityName: '', zip: '' },\r\n    infoItems: []\r\n  }\r\n\r\n  constructor(props: IDashboardProps) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  public componentDidMount() {\r\n    this.context.topics.subscribe('system-settings-updated', () => this.forceUpdate());\r\n\r\n    if (this.props.location.zip || this.props.location.cityName) {\r\n      const weatherService = this.context.getService<IWeatherService>('WeatherService', 'reactron-openweathermap');\r\n      if (weatherService) {\r\n        weatherService.getFiveDaysForecast({ zip: this.props.location.zip, cityName: this.props.location.cityName })\r\n          .then((response: any) => {\r\n            this.setState({\r\n              weatherForecast: response,\r\n              units: weatherService.getOptions && weatherService.getOptions().units\r\n            });\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  /* <DynamicSVG>\r\n      {bounds => this.renderFrame(bounds)}\r\n    </DynamicSVG> */\r\n\r\n  // private renderFrame(bounds: ClientRect) {\r\n  //   const stroke = 5;\r\n\r\n  //   const points: IPosition[] = [\r\n  //     { x: bounds.width - stroke, y: stroke },\r\n  //     { x: stroke, y: stroke },\r\n  //     { x: stroke, y: bounds.height - stroke },\r\n  //     { x: bounds.width - 77, y: bounds.height - stroke },\r\n  //     { x: bounds.width - 47, y: bounds.height - 30 },\r\n  //     { x: bounds.width - stroke, y: bounds.height - 30 },\r\n  //   ];\r\n\r\n  //   return (\r\n  //     <React.Fragment>\r\n  //       <SVGShape path={points} stroke=\"#379\" strokeSize={stroke} fill=\"#444\" />\r\n  //       <CircuitBoard />\r\n  //     </React.Fragment>\r\n  //   );\r\n  // }\r\n\r\n  private renderDate() {\r\n    const m = moment().tz(this.context.settings.timezone);\r\n    const dayOfWeek = m.format('dddd');\r\n    const month = m.format(\"MMM\");\r\n    const day = m.format(\"Do\");\r\n\r\n    const condition = this.state.weatherForecast && this.state.weatherForecast.list[0];\r\n    const weatherId = condition && condition.weather_id;\r\n    const night = condition && condition.weather_icon.endsWith('n');\r\n    \r\n    const weatherIcon = this.context.renderComponent({\r\n      moduleName: 'reactron-openweathermap',\r\n      componentName: 'WeatherIcon',\r\n      options: { weatherId, night },\r\n      className: styles['weatherIcon']\r\n    });\r\n\r\n    return (\r\n      <div className={styles['date']}>\r\n        <div className={styles['dayOfWeek']}>{dayOfWeek}</div>\r\n        <div className={styles['monthAndDay']}>\r\n          <span className={styles['month']}>{month}</span> <span>{day}</span>\r\n        </div>\r\n        {weatherIcon}\r\n        <div className={styles['block4']} />\r\n        <div className={styles['block3']} />\r\n        <div className={styles['block2']} />\r\n        <div className={styles['block1']} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderTime() {\r\n    return (\r\n      <div className={styles['time']}>\r\n        <span className={styles['label']}>TIME</span>\r\n        <span className={styles['value']}><DigitalClock timezone={this.context.settings.timezone} /></span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderLocation() {\r\n    return (\r\n      <div className={styles['location']}>\r\n        <span className={styles['label']}>LOCATION</span>\r\n        <span className={styles['value']}>{this.state.weatherForecast && this.state.weatherForecast.city.name}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderInfoItems() {\r\n    const items = this.props.infoItems.map((info, index) => this.renderInfoItem(info, index));\r\n    return (\r\n      <div className={styles['infos']}>\r\n        {items}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderInfoItem(info: InfoItemType, index: number) {\r\n    if (!this.state.weatherForecast || !this.state.units) {\r\n      return null;\r\n    }\r\n\r\n    const condition = this.state.weatherForecast.list[0];\r\n    const infoProps = getInfoItemData(info, this.state.units, condition);\r\n\r\n    if (!infoProps) {\r\n      return null;\r\n    }\r\n    return (<InfoItem key={index} {...infoProps} />);\r\n  }\r\n\r\n  private renderWeatherForecast() {\r\n    return (\r\n      <div className={styles['weatherForecast']}>\r\n        <WeatherInfo timezone={this.context.settings.timezone} weatherForecast={this.state.weatherForecast} context={this.context} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <section className={styles['Dashboard']}>\r\n        <div className={styles['leftLine']} />\r\n        {this.renderDate()}\r\n        {this.renderTime()}\r\n        {this.renderLocation()}\r\n        {this.renderInfoItems()}\r\n        {this.renderWeatherForecast()}\r\n        <div className={styles['content']}>\r\n          {this.props.contentId && this.context.renderComponent({ id: this.props.contentId })}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import { IInputComponentProps } from '@schirkan/reactron-interfaces';\r\nimport * as React from 'react';\r\n\r\nexport const locationInput = (props: IInputComponentProps) => {\r\n  return props && props.value && (props.value.cityName || props.value.zip) ||\r\n    (<span style={{ color: 'red' }}>missing</span>);\r\n};","import { IReactronComponentDefinition } from '@schirkan/reactron-interfaces';\r\nimport { Dashboard } from './components/Dashboard/Dashboard';\r\nimport { locationInput } from './components/locationInput';\r\n\r\nexport const components: IReactronComponentDefinition[] = [{\r\n  component: Dashboard,\r\n  name: 'Dashboard',\r\n  description: 'Dashboard',\r\n  displayName: 'Dashboard',\r\n  type: 'content',\r\n  fields: [{\r\n    name: 'location',\r\n    displayName: 'Location',\r\n    valueType: 'object',\r\n    fields: [{\r\n      name: 'cityName',\r\n      description: 'City Name',\r\n      displayName: 'City Name',\r\n      valueType: 'string'\r\n    }, {\r\n      name: 'zip',\r\n      description: 'Zip, Country Code',\r\n      displayName: 'Zip, Country Code',\r\n      valueType: 'string'\r\n    }],\r\n    inputControl: locationInput\r\n  }, {\r\n    name: 'infoItems',\r\n    displayName: 'Infos',\r\n    valueType: 'string',\r\n    isArray: true,\r\n    values: [\r\n      { value: 'temp', text: 'Temperature' },\r\n      { value: 'rain', text: 'Rain' },\r\n      { value: 'pressure', text: 'Pressure' },\r\n      { value: 'clouds', text: 'Clouds' },\r\n      { value: 'humidity', text: 'Humidity' },\r\n      { value: 'wind', text: 'Wind' }\r\n    ]\r\n  }, {\r\n    name: 'contentId',\r\n    displayName: 'Content',\r\n    valueType: 'webComponent',\r\n  }]\r\n}];\r\n\r\nexport * from './components/Dashboard/Dashboard';"],"names":["tslib_1.__extends","React.Component","React.createElement","styles"],"mappings":"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"}